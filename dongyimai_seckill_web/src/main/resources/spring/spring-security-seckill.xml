<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
			 http://www.springframework.org/schema/security
			 http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- CAS入口点 开始 -->
    <bean  id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <!--service 配置自身工程的根地址+/login/cas   -->
        <property name="service" value="http://localhost:9109/login/cas"/>
    </bean>
    <bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <!-- 单点登录服务器登录URL -->
        <property name="loginUrl" value="http://192.168.188.146:9100/cas/login"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>
    <!-- CAS入口点 结束 -->

    <!-- 认证过滤器 开始 -->
    <!--认证类-->
    <bean id="userDetailService" class="com.seckill.service.UserDetailServiceImpl"/>
    <!-- 认证提供者 -->
    <bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="authenticationUserDetailsService">
            <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <constructor-arg ref="userDetailService"/>
            </bean>
        </property>
        <property name="serviceProperties" ref="serviceProperties"/>

        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="http://192.168.188.146:9100/cas"/>
            </bean>
        </property>
        <property name="key" value="an_id_for_this_auth_provider_only"/>
    </bean>
    <!--认证管理器-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider">
        </security:authentication-provider>
    </security:authentication-manager>
    <!--关联认证管理器-->
    <bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>
    <!-- 认证过滤器 结束 -->

    <!-- 单点登出  开始  -->
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="http://192.168.188.146:9100/cas/logout"/>
        <constructor-arg>
            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/logout/cas"/>
    </bean>
    <!-- 单点登出  结束 -->

    <!-- 匿名访问资源 -->
    <security:http pattern="/favicon.ico" security="none"/>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/js/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>


    <!-- 页面拦截规则 --><!--   entry-point-ref  CAS的入口集配置 -->
    <security:http use-expressions="false" entry-point-ref="casProcessingFilterEntryPoint">
        <security:intercept-url pattern="/seckill-index.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/seckill-item.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/seckillOrder/submitOrderTest.do" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/seckillGoods/*.do" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/**" access="ROLE_USER"/>
        <security:csrf disabled="true"/>
        <!-- custom-filter为过滤器， position 表示将过滤器放在指定的位置上，before表示放在指定位置之前  ，after表示放在指定的位置之后  -->
        <security:custom-filter ref="casAuthenticationFilter" position="CAS_FILTER"/>
        <security:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <security:custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
    </security:http>

</beans>